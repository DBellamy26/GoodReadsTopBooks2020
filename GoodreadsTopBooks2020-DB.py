# -*- coding: utf-8 -*-
"""7-24-21GoodreadsYA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xee-XXzc7IimWhT8I4zlyai7OkT_c4Nq
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
from IPython.display import display, HTML

def status_check(r):
  if r.status_code == 200:
    return 1
  else:
    return -1

def encoding_check(r):
  return (r.encoding)

def decode_content(r, encoding):
  return (r.content.decode(encoding))

Fiction = "https://www.goodreads.com/choiceawards/best-fiction-books-2020"
MysThrill = "https://www.goodreads.com/choiceawards/best-mystery-thriller-books-2020"
HistFict = "https://www.goodreads.com/choiceawards/best-historical-fiction-books-2020"
Fantasy = "https://www.goodreads.com/choiceawards/best-fantasy-books-2020"
Romance = "https://www.goodreads.com/choiceawards/best-romance-books-2020"
SciFi = "https://www.goodreads.com/choiceawards/best-science-fiction-books-2020"
Horror = "https://www.goodreads.com/choiceawards/best-horror-books-2020"
Humor = "https://www.goodreads.com/choiceawards/best-humor-books-2020"
NonFict = "https://www.goodreads.com/choiceawards/best-nonfiction-books-2020"
Mem = "https://www.goodreads.com/choiceawards/best-memoir-autobiography-books-2020"
HistBio = "https://www.goodreads.com/choiceawards/best-history-biography-books-2020"
SciTech = "https://www.goodreads.com/choiceawards/best-science-technology-books-2020"
Food = "https://www.goodreads.com/choiceawards/best-food-cookbooks-2020"
GraphNov = "https://www.goodreads.com/choiceawards/best-graphic-novels-comics-2020"
Poetry = "https://www.goodreads.com/choiceawards/best-poetry-books-2020"
DebNov = "https://www.goodreads.com/choiceawards/best-debut-novel-2020"
YAFict = "https://www.goodreads.com/choiceawards/best-young-adult-fiction-books-2020"
YASciFi = "https://www.goodreads.com/choiceawards/best-young-adult-fantasy-books-2020"
MiddleGrade = "https://www.goodreads.com/choiceawards/best-childrens-books-2020"
PictBooks = "https://www.goodreads.com/choiceawards/best-picture-books-2020"

print("This program will search goodreads for the top books by category in 2020.\n\n\n1-Fiction\n2-Mystery & Thriller\n3-Historical Fiction\n4-Fantasy\n5-Romance"
      "\n6-Science Fiction\n7-Horror\n8-Humor\n9-Non-Fiction\n10-Memoir & Autobiography"
      "\n11-History & Biography\n12-Science & Technology\n13-Food & Cookbooks"
      "\n14-Graphic Novels & Comics\n15-Poetry\n16-Debut Novel\n17-Young Adult Fiction"
      "\n18-Young Adult Fantasy & Science Ficiton\n19-Middle Grade & Childrens\n20-Picture Books")

print("\nAll data is provided by goodreads at https://www.goodreads.com/.\nHuge thank you to their"
      "team for putting on these polls to help the public and authors!")
selection = str(input("\nWhich category would you like to view the Top 20 books for 2020? (1-20) "))
go = False

if selection == "1":
  GoodReads = Fiction
  go = True
elif selection == '2':
  GoodReads = MysThrill
  go = True
elif selection == '3':
  GoodReads = HistFict
  go = True
elif selection == '4':
  GoodReads = Fantasy
  go = True
elif selection == '5':
  GoodReads = Romance
  go = True
elif selection == '6':
  GoodReads = SciFi
  go = True
elif selection == '7':
  GoodReads = Horror
  go = True
elif selection == '8':
  GoodReads = Humor
  go = True
elif selection == '9':
  GoodReads = NonFict
  go = True
elif selection == '10':
  GoodReads = Mem
  go = True
elif selection == '11':
  GoodReads = HistBio
  go = True
elif selection == '12':
  GoodReads = SciTech
  go = True
elif selection == '13':
  GoodReads = Food
  go = True
elif selection == '14':
  GoodReads = GraphNov
  go = True
elif selection == '15':
  GoodReads = Poetry
  go = True
elif selection == '16':
  GoodReads = DebNov
  go = True
elif selection == '17':
  GoodReads = YAFict
  go = True
elif selection == '18':
  GoodReads = YASciFi
  go = True
elif selection == '19':
  GoodReads = MiddleGrade
  go = True
elif selection == '20':
  GoodReads = PictBooks
  go = True
else:
  print("\nYou didn't provide a number that is listed. Run the program again.")


if go is True:  #this stops the code from continuing if a number isn't provided correctly
  GR = GoodReads
  response = requests.get(GR)

  if status_check(response) == 1:
    response.status_code
    contents = decode_content(response, encoding_check(response))
    soup = BeautifulSoup(contents, "html.parser")
    txt_dump = soup.text
    topbooks = []
    Category = soup.findAll("img")
    Votes = soup.findAll("strong")
    
    for img in Category:
      if 'alt' in img.attrs:
        topbooks.append(img.attrs['alt']) #adding the books to a list
                          #the top rated book is at index 4, the next book starts at index 9
                          #there are some social media <img> tags that this picks up, so the last book 
                          #is index -9
    voters = []
    for v in Votes:        #using this to get the amount of votes each book received
      if 'class' in v.attrs:
        voters.append(v.text.strip().replace('\n'," "))

    ranks = []
    for r in range(2,21):  #using this to get the list of 2-20 for the rank column in dataframe
      ranks.append(r)

    toprated = pd.DataFrame({'2020 - Top Rated Book in this Category':topbooks[4],'Votes':voters[0]},index=['Ranked 1st'])
    top20 = pd.DataFrame({'Rank':ranks,'2020 - Top Books in this Category':topbooks[9:-9],'Votes':voters[1:]})
    pd.set_option('display.max_colwidth', None)

    print("\n\nHere are the results for your category.\n\n")
    display(toprated)
    print("")
    display(HTML(top20.to_html(index=False)))
    
  else:
    print("The webpage is unavailable at this time. Please try again later.")
else:
  print("")